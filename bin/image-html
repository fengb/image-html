#!/usr/bin/env phantomjs


var fs = require('fs');
var sys = require('system');
var page = require('webpage').create();


var opts = function(args){
  var opts = {name: args[0], args: []};
  for(var i=1; i < args.length; i++){
    if(args[i][0] == '-'){
      switch(args[i]) {
        case '-o': case '--output':
          opts.output = args[++i];
          break;
        default:
          console.log('Unknown switch: ' + args[i]);
          phantom.exit();
      }
    } else{
      opts.args.push(args[i]);
    }
  }
  return opts;
}(sys.args);


var file = fs.open(opts.args[0], 'rb');
var imageBase64 = btoa(file.read());
file.close();


function load(dir){
  fs.list(dir).forEach(function(filename){
    var path = dir + '/' + filename;
    if(filename.match(/^\./)){
      //Do nothing
    } else if(fs.isFile(path)){
      page.injectJs(path);
    } else if(fs.isDirectory(path)){
      load(path);
    }
  });
}
load('src');


page.evaluate(function(imageBase64, output){
  var img = new Image();
  img.onload = function(){
    var out = ImageHtml.dom(img, 'a', output);
    window.output = {
      css: out.css(),
      html: out.html()
    };
  };
  img.src = 'data:image/png;base64,' + imageBase64;
}, imageBase64, opts.output);


setInterval(function(){
  var output = page.evaluate(function(){
    return window.output;
  });

  if(output) {
    var outfile = opts.args[1] ? fs.open(opts.args[1], 'w') : sys.stdout;
    outfile.write(['<html>',
                   '<head>',
                   '<style>',
                   output.css,
                   '</style>',
                   '</head>',
                   '<body style="margin:0">',
                   output.html,
                   '</body>',
                   '</html>'].join('\n'));
    phantom.exit();
  }
}, 100);
